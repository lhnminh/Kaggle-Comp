{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0a15ba2b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:47.949427Z",
     "iopub.status.busy": "2025-09-08T08:33:47.948991Z",
     "iopub.status.idle": "2025-09-08T08:33:50.348537Z",
     "shell.execute_reply": "2025-09-08T08:33:50.347223Z"
    },
    "papermill": {
     "duration": 2.405717,
     "end_time": "2025-09-08T08:33:50.350530",
     "exception": false,
     "start_time": "2025-09-08T08:33:47.944813",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "43e8e8f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:50.357634Z",
     "iopub.status.busy": "2025-09-08T08:33:50.357055Z",
     "iopub.status.idle": "2025-09-08T08:33:54.448707Z",
     "shell.execute_reply": "2025-09-08T08:33:54.447345Z"
    },
    "papermill": {
     "duration": 4.097261,
     "end_time": "2025-09-08T08:33:54.450790",
     "exception": false,
     "start_time": "2025-09-08T08:33:50.353529",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "#Importing Data\n",
    "X_full = pd.read_csv('/kaggle/input/playground-series-s5e9/train.csv', index_col='id')\n",
    "X_test_full = pd.read_csv('/kaggle/input/playground-series-s5e9/test.csv', index_col='id')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a92b9b90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:54.457325Z",
     "iopub.status.busy": "2025-09-08T08:33:54.456956Z",
     "iopub.status.idle": "2025-09-08T08:33:54.800483Z",
     "shell.execute_reply": "2025-09-08T08:33:54.799086Z"
    },
    "papermill": {
     "duration": 0.349041,
     "end_time": "2025-09-08T08:33:54.802474",
     "exception": false,
     "start_time": "2025-09-08T08:33:54.453433",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BeatsPerMinute               1.000000\n",
      "MoodScore                    0.007059\n",
      "TrackDurationMs              0.006637\n",
      "RhythmScore                  0.005440\n",
      "VocalContent                 0.004876\n",
      "LivePerformanceLikelihood    0.003471\n",
      "InstrumentalScore            0.001900\n",
      "NewFeat1                    -0.000316\n",
      "AcousticQuality             -0.000820\n",
      "AudioLoudness               -0.003327\n",
      "Energy                      -0.004375\n",
      "Name: BeatsPerMinute, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "#X_full.head()\n",
    "'''\n",
    "'RhythmScore'\n",
    "'AudioLoudness'\n",
    "'VocalContent'\n",
    "'AcousticQuality',\n",
    "'InstrumentalScore',\n",
    "'LivePerformanceLikelihood',\n",
    "'MoodScore',\n",
    "'TrackDurationMs',\n",
    "'Energy',\n",
    "'BeatsPerMinute'\n",
    "'''\n",
    "'''\n",
    "remove_cols = [\"MoodScore\", ]\n",
    "\n",
    "X_full.drop([\"MoodScore\"],axis = 1, inplace = True)\n",
    "X_test_full.drop([\"MoodScore\"],axis = 1, inplace = True)'''\n",
    "\n",
    "\n",
    "X_full[\"NewFeat1\"] = X_full[\"RhythmScore\"] * X_full[\"Energy\"] * X_full[\"AudioLoudness\"]\n",
    "X_test_full[\"NewFeat1\"] = X_test_full[\"RhythmScore\"] * X_test_full[\"Energy\"] * X_test_full[\"AudioLoudness\"]\n",
    "\n",
    "corr = X_full.corr()\n",
    "print(corr['BeatsPerMinute'].sort_values(ascending=False))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f137a5d3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:54.808944Z",
     "iopub.status.busy": "2025-09-08T08:33:54.808611Z",
     "iopub.status.idle": "2025-09-08T08:33:54.892506Z",
     "shell.execute_reply": "2025-09-08T08:33:54.891475Z"
    },
    "papermill": {
     "duration": 0.089592,
     "end_time": "2025-09-08T08:33:54.894672",
     "exception": false,
     "start_time": "2025-09-08T08:33:54.805080",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_full.dropna(axis = 0, subset = [\"BeatsPerMinute\"], inplace = True)\n",
    "y = X_full.BeatsPerMinute\n",
    "X_full.drop([\"BeatsPerMinute\"], axis = 1, inplace = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "050d1618",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:54.901322Z",
     "iopub.status.busy": "2025-09-08T08:33:54.900952Z",
     "iopub.status.idle": "2025-09-08T08:33:54.996863Z",
     "shell.execute_reply": "2025-09-08T08:33:54.994995Z"
    },
    "papermill": {
     "duration": 0.101914,
     "end_time": "2025-09-08T08:33:54.999308",
     "exception": false,
     "start_time": "2025-09-08T08:33:54.897394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x_train, x_valid, y_train , y_valid = train_test_split(X_full, y, train_size = 0.8, test_size = 0.2, random_state = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ff2aafcd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:33:55.006978Z",
     "iopub.status.busy": "2025-09-08T08:33:55.006619Z",
     "iopub.status.idle": "2025-09-08T08:35:06.247875Z",
     "shell.execute_reply": "2025-09-08T08:35:06.246411Z"
    },
    "papermill": {
     "duration": 71.249915,
     "end_time": "2025-09-08T08:35:06.252103",
     "exception": false,
     "start_time": "2025-09-08T08:33:55.002188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mae: 21.414982996068282, Estimator = 4000, learning rate = 0.05\n"
     ]
    }
   ],
   "source": [
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.impute import SimpleImputer\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.metrics import mean_absolute_error\n",
    "\n",
    "num_transformer = SimpleImputer(strategy = \"mean\")\n",
    "\n",
    "preprocess = ColumnTransformer(transformers = [(\"num\", num_transformer, x_train.columns)])\n",
    "\n",
    "\n",
    "estimators = 4000\n",
    "learn_rate = 0.05\n",
    "\n",
    "my_model = XGBRegressor(n_estimators = estimators, random_state = 0, learning_rate = learn_rate )\n",
    "\n",
    "\n",
    "model = Pipeline(steps = [(\"preprocess\", preprocess), (\"model\", my_model )])\n",
    "\n",
    "model.fit(x_train, y_train)\n",
    "\n",
    "preds = model.predict(x_valid)\n",
    "\n",
    "mae = mean_absolute_error(preds, y_valid)\n",
    "\n",
    "print(f\"Mae: {mae}, Estimator = {estimators}, learning rate = {learn_rate}\")\n",
    "\n",
    "#Mae: 21.187070066472046, Estimator = 4000, learning rate = 0.001\n",
    "\n",
    "#Mae: 21.30098858285947, Estimator = 10000, learning rate = 0.01 (Removed mood score)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b9e34395",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-09-08T08:35:06.260555Z",
     "iopub.status.busy": "2025-09-08T08:35:06.260100Z",
     "iopub.status.idle": "2025-09-08T08:35:15.160075Z",
     "shell.execute_reply": "2025-09-08T08:35:15.158902Z"
    },
    "papermill": {
     "duration": 8.906464,
     "end_time": "2025-09-08T08:35:15.162254",
     "exception": false,
     "start_time": "2025-09-08T08:35:06.255790",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "final_preds = model.predict(X_test_full)\n",
    "\n",
    "output = pd.DataFrame({'id': X_test_full.index,\n",
    "                       'BeatsPerMinute': final_preds})\n",
    "output.to_csv('submission.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 13345277,
     "sourceId": 91720,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31089,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 94.521458,
   "end_time": "2025-09-08T08:35:15.887330",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-09-08T08:33:41.365872",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
